name: Post Processing (FR)

permissions:
  contents: read
  actions: read

on:
  workflow_run:
    workflows: ["Full SF Crime Pipeline"]   # upstream workflow adƒ±
    types: [completed]
    branches: [main]

jobs:
  run_fr:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    env:
      CRIME_DATA_DIR: crime_prediction_data
      WX_LOCATION: "paris"
      WX_UNIT: "metric"
      GEOID_LEN: "11"

      # Artifact-first okuma/yazma i√ßin ENV
      ARTIFACT_ZIP: artifact/sf-crime-pipeline-output.zip
      ARTIFACT_DIR: artifact
      FR_OUTPUT_DIR: ${{ github.workspace }}/crime_prediction_data
      FALLBACK_DIRS: ${{ github.workspace }}/crime_prediction_data,${{ github.workspace }}

    steps:
      - uses: actions/checkout@v4

      - name: Ensure data dir (FR)
        run: mkdir -p "${CRIME_DATA_DIR}"

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps (quick)
        run: |
          python -m pip install -U pip wheel setuptools
          [ -f requirements.txt ] && pip install -r requirements.txt || true

      # ‚¨áÔ∏è Upstream pipeline artifact'ƒ±nƒ± ba≈üka workflow/run'dan indir
      - name: Download upstream artifact (triggering run)
        uses: dawidd6/action-download-artifact@v6
        with:
          run_id: ${{ github.event.workflow_run.id }}   # üëà tetikleyen run
          name: sf-crime-pipeline-output
          path: artifact

      # Not: stacking dataset ini en sonda (√∂zellik analizinden sonra) set edeceƒüiz.

      - name: FR 00) Base grid / event label merge
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_crime_fr.py
          head -n 5 "${CRIME_DATA_DIR}/sf_crime_grid_full_labeled.csv" || true

      - name: FR 01) 911
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_911_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_01.csv" || true

      - name: FR 02) 311
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_311_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_02.csv" || true

      - name: FR 03) Population
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_population_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_03.csv" || true

      - name: FR 04) Bus
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_bus_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_04.csv" || true

      - name: FR 05) Train
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_train_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_05.csv" || true

      - name: FR 06) POI
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_poi_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_06.csv" || true

      - name: FR 07) Police & Gov
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_police_gov_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_07.csv" || true

      - name: FR 08) Weather
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u update_weather_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_08.csv" || true

      - name: FR 09) Neighbors
        env:
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          python -u make_neighbors_fr.py || true
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_09.csv" || true

      - name: FR 10) Feature Analysis (FR ‚Üí fr_crime_10.csv)
        run: |
          set -e
          mkdir -p outputs_feature_analysis_fr
          python -u crime_feature_analysis.py \
            --csv "${CRIME_DATA_DIR}/fr_crime_08.csv" \
            --target "Y_label" \
            --sample_n 300000 \
            --test_size 0.2 \
            --random_state 42 \
            --outdir "outputs_feature_analysis_fr" \
            --out_csv "${CRIME_DATA_DIR}/fr_crime_09.csv"

          echo "üß† Feature analysis completed. Checking outputs..."
          head -n 5 "${CRIME_DATA_DIR}/fr_crime_09.csv" || true
          ls -lah "${CRIME_DATA_DIR}" || true
          ls -lah "outputs_feature_analysis_fr" || true

      # STACKING_DATASET'i 10'a y√∂nlendir; dosya yoksa 09'a d√º≈ü
      - name: Set STACKING_DATASET (prefer fr_crime_10.csv)
        run: |
          set -e
          if [ -s "${CRIME_DATA_DIR}/fr_crime_10.csv" ]; then
            echo "STACKING_DATASET=${CRIME_DATA_DIR}/fr_crime_10.csv" >> $GITHUB_ENV
            echo "‚úÖ Using STACKING_DATASET=fr_crime_10.csv"
          else
            echo "STACKING_DATASET=${CRIME_DATA_DIR}/fr_crime_09.csv" >> $GITHUB_ENV
            echo "‚ö†Ô∏è  Fallback STACKING_DATASET=fr_crime_09.csv (fr_crime_10.csv not found)"
          fi

      # üîÅ Stacking modelini feature analysis √ßƒ±ktƒ±sƒ±yla yeniden √ßalƒ±≈ütƒ±r
      - name: FR 11) Stacking
        env:
          STACKING_DATASET: ${{ env.STACKING_DATASET }}
          ARTIFACT_ZIP: ${{ env.ARTIFACT_ZIP }}
          ARTIFACT_DIR: ${{ env.ARTIFACT_DIR }}
          FR_OUTPUT_DIR: ${{ env.FR_OUTPUT_DIR }}
          FALLBACK_DIRS: ${{ env.FALLBACK_DIRS }}
        run: |
          set -e
          echo "üöÄ Running stacking model with dataset: ${STACKING_DATASET}"
          python -u stacking_risk_pipeline_fr.py

      # ‚úÖ CSV'leri Parquet'e √ßevir ve hem CSV hem Parquet'i tek bir ZIP'e topla
      - name: FR 12) Convert outputs to Parquet & ZIP
        run: |
          set -e
          # Parquet d√∂n√º≈üt√ºrme: crime_prediction_data ve outputs_feature_analysis_fr i√ßindeki t√ºm CSV'ler
          python - <<'PY'
          import os, glob, sys, zipfile
          from pathlib import Path
          import pandas as pd

          base = os.environ.get("CRIME_DATA_DIR","crime_prediction_data")
          extra = "outputs_feature_analysis_fr"
          out_zip = Path(base) / "fr_outputs_parquet.zip"

          def files_in(dirpath, pattern):
              if not os.path.isdir(dirpath): return []
              return sorted(glob.glob(os.path.join(dirpath, pattern)))

          # 1) CSV -> Parquet d√∂n√º≈üt√ºr
          converted_parquets = []
          for folder in [base, extra]:
              for fp in files_in(folder, "*.csv"):
                  pq_path = Path(fp).with_suffix(".parquet")
                  try:
                      df = pd.read_csv(fp, low_memory=False)
                      df.to_parquet(pq_path, index=False)  # pyarrow/fastparquet
                      print(f"‚Üí parquet yazƒ±ldƒ±: {pq_path}")
                      converted_parquets.append(str(pq_path))
                  except Exception as e:
                      print(f"skip (csv->parquet) {fp}: {e}", file=sys.stderr)

          # 2) ZIP'e hem CSV hem Parquet ekle (g√∂reli yolu koru)
          to_zip = set()
          for folder in [base, extra]:
              for patt in ("*.csv","*.parquet"):
                  for fp in files_in(folder, patt):
                      to_zip.add(fp)

          with zipfile.ZipFile(out_zip, "w", compression=zipfile.ZIP_DEFLATED) as z:
              for fp in sorted(to_zip):
                  p = Path(fp)
                  try:
                      # crime_prediction_data altƒ±nda ise g√∂reli yolu koru
                      arcname = p.relative_to(base) if str(p).startswith(str(Path(base))) else p.name
                  except Exception:
                      arcname = p.name
                  z.write(fp, arcname=str(arcname))
                  print(f"+ ZIP'e eklendi: {arcname}")
          print(f"‚úÖ ZIP hazƒ±r: {out_zip} (toplam {len(to_zip)} dosya)")
          PY

          # Kƒ±sa kontrol
          ls -lah "${CRIME_DATA_DIR}" | sed -n '1,200p'

      - name: Upload FR pipeline outputs
        uses: actions/upload-artifact@v4
        with:
          name: fr-crime-pipeline-output
          path: |
            ${{ env.CRIME_DATA_DIR }}/sf_crime_grid_full_labeled.csv
            ${{ env.CRIME_DATA_DIR }}/fr_crime_0*.csv
            ${{ env.CRIME_DATA_DIR }}/fr_crime_10.csv
            ${{ env.CRIME_DATA_DIR }}/*.parquet
            outputs_feature_analysis_fr/**
            outputs_feature_analysis_fr/*.parquet
            ${{ env.CRIME_DATA_DIR }}/neighbors.csv
            ${{ env.CRIME_DATA_DIR }}/risk_hourly*.csv
            ${{ env.CRIME_DATA_DIR }}/patrol_recs*.csv
            ${{ env.CRIME_DATA_DIR }}/metrics_*.csv
            ${{ env.CRIME_DATA_DIR }}/fr_outputs_parquet.zip   # üëà CSV+Parquet tek pakette
          if-no-files-found: warn
          retention-days: 14
